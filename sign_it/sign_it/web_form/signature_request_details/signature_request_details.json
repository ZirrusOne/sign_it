{
 "allow_comments": 0,
 "allow_delete": 0,
 "allow_edit": 0,
 "allow_incomplete": 0,
 "allow_multiple": 0,
 "allow_print": 0,
 "anonymous": 0,
 "apply_document_permissions": 0,
 "button_label": "Save",
 "client_script": "frappe.web_form.after_load = () => {\n\n    $('textarea[data-fieldname=\"signature\"]').addClass('cedarville-cursive-regular');\n\n    const params = new URLSearchParams(window.location.search);\n    const encryptValue = params.get('encrypt');\n    \n\n    \n    \n    if (encryptValue){\n            frappe.call({\n                method: \"sign_it.api.utils.get_document\",\n                args:{\n                    'signature_url':encryptValue\n                },\n                callback: function(response) {\n                    if (response.message) {\n                        $('.web-form-introduction').html(response.message)\n                        \n                    } else {\n                        console.log(\"No data returned from the server.\");\n                    }\n                },\n                error: function(error) {\n                    console.error(\"Error in API Call:\", error);\n                }\n            });\n            \n        \n        \n        \n          $(document).ready(() => {\n                const form = $('.web-form');\n                const submitButton = form.find('button[type=\"submit\"]');\n                \n                // Prevent form submission\n                form.on('submit', function(event) {\n                    event.preventDefault(); // Stop default form submission\n                    return false; // Additional prevention\n                });\n        \n                submitButton.on('click', function(event) {\n                    event.preventDefault(); // Prevent button click submission\n                    event.stopPropagation(); // Stop event bubbling\n                    \n            \n        \n                const signedBy = document.querySelector('input[data-fieldname=\"signed_by\"]').value;\n                const signedDate = document.querySelector('input[data-fieldname=\"signed_date\"]').value;\n                const signatureData = $('textarea[data-fieldname=\"signature\"]').val();\n\n        \n        \n        \n        \n                frappe.call({\n                    method: \"sign_it.api.utils.get_signature\",\n                    args:{\n                        'signature_url':encryptValue,\n                        'signedBy':signedBy,\n                        'signedDate':signedDate,\n                        'signatureData':signatureData,\n                    },\n                    callback: function(response) {\n                        if (response.message) {\n                            console.log(response.message)\n        \n                        } else {\n                            console.log(\"No data returned from the server.\");\n                        }\n                    },\n                    error: function(error) {\n                        console.error(\"Error in API Call:\", error);\n                    }\n                });\n    \n    \n    \n    \n    \n    \n    \n                \n                \n                return false; // Final prevention of default submission\n            });\n    \n            // Change button type to further prevent default submission\n            submitButton.attr('type', 'button');\n        });\n    }\n    else{\n    \n        frappe.throw('Encrypt key is required')\n    }\n\n\n\n}\n\n\n",
 "condition_json": "[]",
 "creation": "2024-12-07 11:12:30.130388",
 "custom_css": "    table {\n        display: block;          /* Enable block display for scrolling */\n        overflow-x: auto;        /* Enable horizontal scrolling */\n        white-space: nowrap;     /* Prevent breaking rows */\n        width: 100%;             /* Make it responsive to its container */\n\n    }\n\n    table {\n        width: 100%;             /* Ensure the table fits within the container */\n        border-collapse: collapse; /* Optional for consistent styling \n        border: 0.5px solid #ddd;  /* Add a border around the table container */\n\n    }\n\n    th,\n    td {\n        padding: 18px;            /* Add padding for better readability */\n        text-align: left;        /* Align text to the left */\n        border: 0.5px solid #ddd;  /* Add a border around the table container */\n\n    }",
 "doc_type": "Signature Request Details",
 "docstatus": 0,
 "doctype": "Web Form",
 "idx": 0,
 "introduction_text": "<div class=\"ql-editor read-mode\"><p><br></p></div>",
 "is_standard": 1,
 "list_columns": [],
 "login_required": 0,
 "max_attachment_size": 0,
 "modified": "2024-12-19 00:09:21.957088",
 "modified_by": "Administrator",
 "module": "Sign It",
 "name": "signature-request-details",
 "owner": "Administrator",
 "published": 1,
 "route": "signature-request-details",
 "show_attachments": 0,
 "show_list": 0,
 "show_sidebar": 0,
 "title": "Signature Request",
 "web_form_fields": [
  {
   "allow_read_on_all_link_options": 0,
   "fieldname": "section_break_wfsp",
   "fieldtype": "Section Break",
   "hidden": 0,
   "label": "Signature Details",
   "max_length": 0,
   "max_value": 0,
   "precision": "",
   "read_only": 0,
   "reqd": 0,
   "show_in_filter": 0
  },
  {
   "allow_read_on_all_link_options": 0,
   "fieldname": "signed_by",
   "fieldtype": "Data",
   "hidden": 0,
   "label": "Email",
   "max_length": 0,
   "max_value": 0,
   "options": "Email",
   "precision": "",
   "read_only": 0,
   "reqd": 1,
   "show_in_filter": 0
  },
  {
   "allow_read_on_all_link_options": 0,
   "fieldname": "signed_date",
   "fieldtype": "Date",
   "hidden": 0,
   "label": "Signed Date",
   "max_length": 0,
   "max_value": 0,
   "precision": "",
   "read_only": 0,
   "reqd": 1,
   "show_in_filter": 0
  },
  {
   "allow_read_on_all_link_options": 0,
   "fieldname": "column_break_twyx",
   "fieldtype": "Column Break",
   "hidden": 0,
   "max_length": 0,
   "max_value": 0,
   "precision": "",
   "read_only": 0,
   "reqd": 0,
   "show_in_filter": 0
  },
  {
   "allow_read_on_all_link_options": 0,
   "depends_on": "",
   "fieldname": "signature",
   "fieldtype": "Small Text",
   "hidden": 0,
   "label": "signature",
   "max_length": 0,
   "max_value": 0,
   "precision": "",
   "read_only": 0,
   "reqd": 1,
   "show_in_filter": 0
  }
 ]
}